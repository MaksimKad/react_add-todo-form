{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","title","id","completed","cn","TodoList","todos","map","username","findUser","userId","usersFromServer","find","newTodos","App","useState","setTitle","setTodos","selectedUser","setSelectedUser","incorrectUser","setIncorrectUser","titleError","setTitleError","onChange","event","target","value","action","method","onSubmit","preventDefault","hastitleError","trim","hasIncorrectUser","prevTodos","newTodo","Math","max","type","placeholder","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c2745e5c.chunk.js","sourcesContent":["import { FC } from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import { FC } from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: FC<Props> = ({ todo }) => {\n  const {\n    title,\n    id,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={cn('TodoInfo',\n        { 'TodoInfo--completed': completed })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { FC } from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","export default [\r\n  {\r\n    id: 1,\r\n    name: 'Leanne Graham',\r\n    username: 'Bret',\r\n    email: 'Sincere@april.biz',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Ervin Howell',\r\n    username: 'Antonette',\r\n    email: 'Shanna@melissa.tv',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Clementine Bauch',\r\n    username: 'Samantha',\r\n    email: 'Nathan@yesenia.net',\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'Patricia Lebsack',\r\n    username: 'Karianne',\r\n    email: 'Julianne.OConner@kory.org',\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'Chelsey Dietrich',\r\n    username: 'Kamren',\r\n    email: 'Lucio_Hettinger@annie.ca',\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'Mrs. Dennis Schulist',\r\n    username: 'Leopoldo_Corkery',\r\n    email: 'Karley_Dach@jasper.info',\r\n  },\r\n  {\r\n    id: 7,\r\n    name: 'Kurtis Weissnat',\r\n    username: 'Elwyn.Skiles',\r\n    email: 'Telly.Hoeger@billy.biz',\r\n  },\r\n  {\r\n    id: 8,\r\n    name: 'Nicholas Runolfsdottir V',\r\n    username: 'Maxime_Nienow',\r\n    email: 'Sherwood@rosamond.me',\r\n  },\r\n  {\r\n    id: 9,\r\n    name: 'Glenna Reichert',\r\n    username: 'Delphine',\r\n    email: 'Chaim_McDermott@dana.io',\r\n  },\r\n  {\r\n    id: 10,\r\n    name: 'Clementina DuBuque',\r\n    username: 'Moriah.Stanton',\r\n    email: 'Rey.Padberg@karina.biz',\r\n  },\r\n];\r\n","import { useState } from 'react';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport './App.scss';\n\nconst findUser = (userId: number) => (\n  usersFromServer.find(user => user.id === userId) || null\n);\n\nexport const newTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: findUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [todos, setTodos] = useState(newTodos);\n  const [selectedUser, setSelectedUser] = useState(0);\n  const [incorrectUser, setIncorrectUser] = useState(false);\n  const [titleError, setTitleError] = useState(false);\n\n  const submitForm = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const hastitleError = !title.trim();\n    const hasIncorrectUser = selectedUser === 0;\n\n    setTitleError(hastitleError);\n    setIncorrectUser(hasIncorrectUser);\n\n    if (hastitleError || hasIncorrectUser) {\n      return;\n    }\n\n    setTodos(prevTodos => {\n      const newId = Math.max(...prevTodos.map(todo => todo.id)) + 1;\n\n      const newTodo = {\n        id: newId,\n        title: title.trim(),\n        completed: false,\n        userId: selectedUser,\n        user: findUser(selectedUser),\n      };\n\n      return [\n        ...prevTodos,\n        newTodo,\n      ];\n    });\n\n    setTitle('');\n    setSelectedUser(0);\n  };\n\n  const onChange = (\n    event:\n    React.ChangeEvent<HTMLInputElement> | React.ChangeEvent<HTMLSelectElement>,\n  ) => {\n    if (event.target.name === 'title') {\n      setTitle(event.target.value);\n      setTitleError(false);\n    }\n\n    if (event.target.name === 'user') {\n      setSelectedUser(+(event.target.value));\n      setIncorrectUser(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={submitForm}\n      >\n        <div className=\"field\">\n          <label>\n            {'Title: '}\n\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              name=\"title\"\n              value={title}\n              onChange={onChange}\n              placeholder=\"Enter a title\"\n            />\n          </label>\n          {\n            titleError\n            && <span className=\"error\">Please enter a title</span>\n          }\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {'User: '}\n\n            <select\n              data-cy=\"userSelect\"\n              name=\"user\"\n              value={selectedUser}\n              onChange={onChange}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {usersFromServer.map(user => (\n                <option key={user.id} value={user.id}>{user.name}</option>\n              ))}\n            </select>\n          </label>\n          {\n            incorrectUser\n            && <span className=\"error\">Please choose a user</span>\n          }\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\r\n  {\r\n    id: 1,\r\n    title: 'delectus aut autem',\r\n    completed: true,\r\n    userId: 1,\r\n  },\r\n  {\r\n    id: 15,\r\n    title: 'some other todo',\r\n    completed: false,\r\n    userId: 1,\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'quis ut nam facilis et officia qui',\r\n    completed: false,\r\n    userId: 4,\r\n  },\r\n];\r\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}